{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","userId","title","completed","TodoForm","onAdd","useState","setTitle","setUserId","titleError","setTitleError","userError","setUserError","action","method","onSubmit","e","preventDefault","Math","max","todosFromServer","map","el","className","type","placeholder","value","onChange","target","disabled","usersFromServer","user","UserInfo","href","TodoInfo","todo","cn","TodoList","todos","App","setTodos","preparedTodos","find","newTodo","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f78ae008.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [{\n  userId: 1,\n  id: 1,\n  title: 'delectus aut autem',\n  completed: false,\n\n}, {\n  userId: 1,\n  id: 2,\n  title: 'quis ut nam facilis et officia qui',\n  completed: false,\n\n}, {\n  userId: 2,\n  id: 3,\n  title: 'fugiat veniam minus',\n  completed: false,\n\n}, {\n  userId: 2,\n  id: 4,\n  title: 'et porro tempora',\n  completed: true,\n\n}];\n","import { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport todosFromServer from '../../api/todos';\n\ntype Props = {\n  onAdd: (value: Todo) => void\n};\n\nexport const TodoForm: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  function onHandle(e: React.FormEvent) {\n    e.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserError(true);\n    }\n\n    if (title && userId) {\n      onAdd({\n        id: (Math.max(...todosFromServer.map(el => el.id)) + 1),\n        title,\n        completed: false,\n        userId,\n      });\n\n      setTitle('');\n      setUserId(0);\n    }\n  }\n\n  return (\n    <form action=\"/api/todos\" method=\"POST\" onSubmit={onHandle}>\n      <div className=\"field\">\n        <label>\n          Title:&nbsp;\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n              setTitleError(false);\n            }}\n          />\n        </label>\n        {titleError\n          && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <label>\n          User:&nbsp;\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={((e) => {\n              setUserId(+e.target.value);\n              setUserError(false);\n            })}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n        </label>\n        {userError && (\n          <span className=\"error\">Please choose a user</span>)}\n\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\n\nimport { PreparedTodo } from '../../types/PreparedTodo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: PreparedTodo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { user } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {user !== null\n        && (\n          <UserInfo user={user} />\n        )}\n\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { PreparedTodo } from '../../types/PreparedTodo';\n\ntype Props = {\n  todos: PreparedTodo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport { PreparedTodo } from './types/PreparedTodo';\nimport { Todo } from './types/Todo';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n\n  const preparedTodos: PreparedTodo[] = todos.map(todo => ({\n    ...todo,\n    user: usersFromServer.find(el => el.id === todo.userId) || null,\n  }));\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        onAdd={(newTodo) => setTodos(prevTodos => [...prevTodos, newTodo])}\n      />\n      <TodoList todos={preparedTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}